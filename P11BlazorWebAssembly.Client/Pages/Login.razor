@page "/Login"
@using Blazored.LocalStorage;
@using Microsoft.AspNetCore.Components.Authorization;
@using P06Shop.Shared.Auth;
@using P06Shop.Shared.Services.AuthService;

@inject IAuthService AuthService
@inject ILocalStorageService LocalStorageService
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager NavigationManager

<h2 class="white-text"><b>Login</b></h2>
<hr class="white-horizontal-line" />

<EditForm Model="userLoginDTO" OnValidSubmit="HandleLogin">
    <div class="col-xl-6 col-md-8 col-12">
        <InputText type="text" @bind-Value="userLoginDTO.Email" class="form-control dark-theme-textbox" placeholder="email address"></InputText>
    </div>
    <br />
    <div class="col-xl-6 col-md-8 col-12">
        <InputText type="password" @bind-Value="userLoginDTO.Password" class="form-control dark-theme-textbox" placeholder="password"></InputText>
    </div>
    <br>
    <div class="col-xl-6 col-md-8 col-12 row">
        <div class="col-xl-2 col-lg-2 col-md-6 col-sm-3 col-3">
            <button type="submit" class="btn btn-primary">Login</button>
        </div>
        <div class="col-xl-5 col-lg-5 col-md-6 col-sm-9 col-9" style="display: flex; align-items: center;">
            <a style="font-weight: bold;" href="/register">Create an account</a>
        </div>
    </div>
</EditForm>



@if (!string.IsNullOrEmpty(message))
{
    <p>@message</p>
}

@code {

    private UserLoginDTO userLoginDTO = new UserLoginDTO();
    private string message = string.Empty;

    private async Task HandleLogin()
    {
        var result = await  AuthService.Login(userLoginDTO);
        if (result.Success)
        {
            await LocalStorageService.SetItemAsync("authToken", result.Data);
            await AuthenticationStateProvider.GetAuthenticationStateAsync();

            NavigationManager.NavigateTo("/");
        }
        else
        {
            message = result.Message;
        }
    }

}
